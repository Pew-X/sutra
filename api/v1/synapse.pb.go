// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: api/v1/synapse.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Kpak represents a knowledge packet - the atomic unit of knowledge
type Kpak struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Subject       string                 `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`                       // Who/what this is about
	Predicate     string                 `protobuf:"bytes,2,opt,name=predicate,proto3" json:"predicate,omitempty"`                   // The relationship/property
	Object        string                 `protobuf:"bytes,3,opt,name=object,proto3" json:"object,omitempty"`                         // The value (JSON-encoded for flexibility)
	Source        string                 `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`                         // Origin of this knowledge
	Confidence    float32                `protobuf:"fixed32,5,opt,name=confidence,proto3" json:"confidence,omitempty"`               // Trust level (0.0-1.0)
	Timestamp     int64                  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                  // Unix timestamp when created
	Id            string                 `protobuf:"bytes,7,opt,name=id,proto3" json:"id,omitempty"`                                 // Content hash for uniqueness
	Spid          string                 `protobuf:"bytes,8,opt,name=spid,proto3" json:"spid,omitempty"`                             // Subject+Predicate hash for indexing
	ExpiresAt     int64                  `protobuf:"varint,9,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"` // Unix timestamp when this k-pak expires (0 = never expires)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Kpak) Reset() {
	*x = Kpak{}
	mi := &file_api_v1_synapse_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Kpak) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kpak) ProtoMessage() {}

func (x *Kpak) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_synapse_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kpak.ProtoReflect.Descriptor instead.
func (*Kpak) Descriptor() ([]byte, []int) {
	return file_api_v1_synapse_proto_rawDescGZIP(), []int{0}
}

func (x *Kpak) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Kpak) GetPredicate() string {
	if x != nil {
		return x.Predicate
	}
	return ""
}

func (x *Kpak) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *Kpak) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Kpak) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *Kpak) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Kpak) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Kpak) GetSpid() string {
	if x != nil {
		return x.Spid
	}
	return ""
}

func (x *Kpak) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

// IngestResponse confirms receipt of knowledge packets
type IngestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accepted      int32                  `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"` // Number of k-paks accepted
	Rejected      int32                  `protobuf:"varint,2,opt,name=rejected,proto3" json:"rejected,omitempty"` // Number of k-paks rejected
	Errors        []string               `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`      // Error messages if any
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngestResponse) Reset() {
	*x = IngestResponse{}
	mi := &file_api_v1_synapse_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestResponse) ProtoMessage() {}

func (x *IngestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_synapse_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestResponse.ProtoReflect.Descriptor instead.
func (*IngestResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_synapse_proto_rawDescGZIP(), []int{1}
}

func (x *IngestResponse) GetAccepted() int32 {
	if x != nil {
		return x.Accepted
	}
	return 0
}

func (x *IngestResponse) GetRejected() int32 {
	if x != nil {
		return x.Rejected
	}
	return 0
}

func (x *IngestResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

// QueryRequest specifies what knowledge to retrieve
type QueryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Subject       string                 `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`           // Query by subject
	Predicate     *string                `protobuf:"bytes,2,opt,name=predicate,proto3,oneof" json:"predicate,omitempty"` // Optional: filter by predicate
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	mi := &file_api_v1_synapse_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_synapse_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_synapse_proto_rawDescGZIP(), []int{2}
}

func (x *QueryRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *QueryRequest) GetPredicate() string {
	if x != nil && x.Predicate != nil {
		return *x.Predicate
	}
	return ""
}

// Health check messages
type HealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	mi := &file_api_v1_synapse_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_synapse_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_synapse_proto_rawDescGZIP(), []int{3}
}

type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`                                     // "healthy", "degraded", etc.
	KpakCount     int32                  `protobuf:"varint,2,opt,name=kpak_count,json=kpakCount,proto3" json:"kpak_count,omitempty"`             // Total knowledge packets stored
	UptimeSeconds int64                  `protobuf:"varint,3,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"` // How long this agent has been running
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_api_v1_synapse_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_synapse_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_synapse_proto_rawDescGZIP(), []int{4}
}

func (x *HealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthResponse) GetKpakCount() int32 {
	if x != nil {
		return x.KpakCount
	}
	return 0
}

func (x *HealthResponse) GetUptimeSeconds() int64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

// Peer information messages
type PeersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeersRequest) Reset() {
	*x = PeersRequest{}
	mi := &file_api_v1_synapse_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeersRequest) ProtoMessage() {}

func (x *PeersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_synapse_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeersRequest.ProtoReflect.Descriptor instead.
func (*PeersRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_synapse_proto_rawDescGZIP(), []int{5}
}

type PeersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Peers         []*PeerInfo            `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeersResponse) Reset() {
	*x = PeersResponse{}
	mi := &file_api_v1_synapse_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeersResponse) ProtoMessage() {}

func (x *PeersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_synapse_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeersResponse.ProtoReflect.Descriptor instead.
func (*PeersResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_synapse_proto_rawDescGZIP(), []int{6}
}

func (x *PeersResponse) GetPeers() []*PeerInfo {
	if x != nil {
		return x.Peers
	}
	return nil
}

type PeerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`                    // IP:port of the peer
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                          // Peer name/ID
	State         int32                  `protobuf:"varint,3,opt,name=state,proto3" json:"state,omitempty"`                       // Peer state (0=alive, 1=suspect, 2=dead)
	LastSeen      int64                  `protobuf:"varint,4,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"` // Unix timestamp of last contact
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeerInfo) Reset() {
	*x = PeerInfo{}
	mi := &file_api_v1_synapse_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerInfo) ProtoMessage() {}

func (x *PeerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_synapse_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerInfo.ProtoReflect.Descriptor instead.
func (*PeerInfo) Descriptor() ([]byte, []int) {
	return file_api_v1_synapse_proto_rawDescGZIP(), []int{7}
}

func (x *PeerInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PeerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PeerInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *PeerInfo) GetLastSeen() int64 {
	if x != nil {
		return x.LastSeen
	}
	return 0
}

// Metrics messages
type MetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricsRequest) Reset() {
	*x = MetricsRequest{}
	mi := &file_api_v1_synapse_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsRequest) ProtoMessage() {}

func (x *MetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_synapse_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsRequest.ProtoReflect.Descriptor instead.
func (*MetricsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_synapse_proto_rawDescGZIP(), []int{8}
}

type MetricsResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TotalKpaks       int32                  `protobuf:"varint,1,opt,name=total_kpaks,json=totalKpaks,proto3" json:"total_kpaks,omitempty"`                       // Total k-paks in memory
	TotalSubjects    int32                  `protobuf:"varint,2,opt,name=total_subjects,json=totalSubjects,proto3" json:"total_subjects,omitempty"`              // Total unique subjects
	IngestRatePerMin int64                  `protobuf:"varint,3,opt,name=ingest_rate_per_min,json=ingestRatePerMin,proto3" json:"ingest_rate_per_min,omitempty"` // K-paks ingested per minute
	QueryRatePerMin  int64                  `protobuf:"varint,4,opt,name=query_rate_per_min,json=queryRatePerMin,proto3" json:"query_rate_per_min,omitempty"`    // Queries per minute
	UptimeSeconds    int64                  `protobuf:"varint,5,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`              // Agent uptime
	MemoryUsageBytes int64                  `protobuf:"varint,6,opt,name=memory_usage_bytes,json=memoryUsageBytes,proto3" json:"memory_usage_bytes,omitempty"`   // Memory usage
	CpuUsagePercent  float32                `protobuf:"fixed32,7,opt,name=cpu_usage_percent,json=cpuUsagePercent,proto3" json:"cpu_usage_percent,omitempty"`     // CPU usage percentage
	Version          string                 `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty"`                                                // Agent version
	ActiveSources    []string               `protobuf:"bytes,9,rep,name=active_sources,json=activeSources,proto3" json:"active_sources,omitempty"`               // List of active data sources
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *MetricsResponse) Reset() {
	*x = MetricsResponse{}
	mi := &file_api_v1_synapse_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsResponse) ProtoMessage() {}

func (x *MetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_synapse_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsResponse.ProtoReflect.Descriptor instead.
func (*MetricsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_synapse_proto_rawDescGZIP(), []int{9}
}

func (x *MetricsResponse) GetTotalKpaks() int32 {
	if x != nil {
		return x.TotalKpaks
	}
	return 0
}

func (x *MetricsResponse) GetTotalSubjects() int32 {
	if x != nil {
		return x.TotalSubjects
	}
	return 0
}

func (x *MetricsResponse) GetIngestRatePerMin() int64 {
	if x != nil {
		return x.IngestRatePerMin
	}
	return 0
}

func (x *MetricsResponse) GetQueryRatePerMin() int64 {
	if x != nil {
		return x.QueryRatePerMin
	}
	return 0
}

func (x *MetricsResponse) GetUptimeSeconds() int64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

func (x *MetricsResponse) GetMemoryUsageBytes() int64 {
	if x != nil {
		return x.MemoryUsageBytes
	}
	return 0
}

func (x *MetricsResponse) GetCpuUsagePercent() float32 {
	if x != nil {
		return x.CpuUsagePercent
	}
	return 0
}

func (x *MetricsResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *MetricsResponse) GetActiveSources() []string {
	if x != nil {
		return x.ActiveSources
	}
	return nil
}

var File_api_v1_synapse_proto protoreflect.FileDescriptor

const file_api_v1_synapse_proto_rawDesc = "" +
	"\n" +
	"\x14api/v1/synapse.proto\x12\n" +
	"synapse.v1\"\xef\x01\n" +
	"\x04Kpak\x12\x18\n" +
	"\asubject\x18\x01 \x01(\tR\asubject\x12\x1c\n" +
	"\tpredicate\x18\x02 \x01(\tR\tpredicate\x12\x16\n" +
	"\x06object\x18\x03 \x01(\tR\x06object\x12\x16\n" +
	"\x06source\x18\x04 \x01(\tR\x06source\x12\x1e\n" +
	"\n" +
	"confidence\x18\x05 \x01(\x02R\n" +
	"confidence\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\x03R\ttimestamp\x12\x0e\n" +
	"\x02id\x18\a \x01(\tR\x02id\x12\x12\n" +
	"\x04spid\x18\b \x01(\tR\x04spid\x12\x1d\n" +
	"\n" +
	"expires_at\x18\t \x01(\x03R\texpiresAt\"`\n" +
	"\x0eIngestResponse\x12\x1a\n" +
	"\baccepted\x18\x01 \x01(\x05R\baccepted\x12\x1a\n" +
	"\brejected\x18\x02 \x01(\x05R\brejected\x12\x16\n" +
	"\x06errors\x18\x03 \x03(\tR\x06errors\"Y\n" +
	"\fQueryRequest\x12\x18\n" +
	"\asubject\x18\x01 \x01(\tR\asubject\x12!\n" +
	"\tpredicate\x18\x02 \x01(\tH\x00R\tpredicate\x88\x01\x01B\f\n" +
	"\n" +
	"_predicate\"\x0f\n" +
	"\rHealthRequest\"n\n" +
	"\x0eHealthResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"kpak_count\x18\x02 \x01(\x05R\tkpakCount\x12%\n" +
	"\x0euptime_seconds\x18\x03 \x01(\x03R\ruptimeSeconds\"\x0e\n" +
	"\fPeersRequest\";\n" +
	"\rPeersResponse\x12*\n" +
	"\x05peers\x18\x01 \x03(\v2\x14.synapse.v1.PeerInfoR\x05peers\"k\n" +
	"\bPeerInfo\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05state\x18\x03 \x01(\x05R\x05state\x12\x1b\n" +
	"\tlast_seen\x18\x04 \x01(\x03R\blastSeen\"\x10\n" +
	"\x0eMetricsRequest\"\xf7\x02\n" +
	"\x0fMetricsResponse\x12\x1f\n" +
	"\vtotal_kpaks\x18\x01 \x01(\x05R\n" +
	"totalKpaks\x12%\n" +
	"\x0etotal_subjects\x18\x02 \x01(\x05R\rtotalSubjects\x12-\n" +
	"\x13ingest_rate_per_min\x18\x03 \x01(\x03R\x10ingestRatePerMin\x12+\n" +
	"\x12query_rate_per_min\x18\x04 \x01(\x03R\x0fqueryRatePerMin\x12%\n" +
	"\x0euptime_seconds\x18\x05 \x01(\x03R\ruptimeSeconds\x12,\n" +
	"\x12memory_usage_bytes\x18\x06 \x01(\x03R\x10memoryUsageBytes\x12*\n" +
	"\x11cpu_usage_percent\x18\a \x01(\x02R\x0fcpuUsagePercent\x12\x18\n" +
	"\aversion\x18\b \x01(\tR\aversion\x12%\n" +
	"\x0eactive_sources\x18\t \x03(\tR\ractiveSources2\xca\x02\n" +
	"\x0eSynapseService\x128\n" +
	"\x06Ingest\x12\x10.synapse.v1.Kpak\x1a\x1a.synapse.v1.IngestResponse(\x01\x125\n" +
	"\x05Query\x12\x18.synapse.v1.QueryRequest\x1a\x10.synapse.v1.Kpak0\x01\x12?\n" +
	"\x06Health\x12\x19.synapse.v1.HealthRequest\x1a\x1a.synapse.v1.HealthResponse\x12?\n" +
	"\bGetPeers\x12\x18.synapse.v1.PeersRequest\x1a\x19.synapse.v1.PeersResponse\x12E\n" +
	"\n" +
	"GetMetrics\x12\x1a.synapse.v1.MetricsRequest\x1a\x1b.synapse.v1.MetricsResponseB\x1fZ\x1dgithub.com/Pew-X/sutra/api/v1b\x06proto3"

var (
	file_api_v1_synapse_proto_rawDescOnce sync.Once
	file_api_v1_synapse_proto_rawDescData []byte
)

func file_api_v1_synapse_proto_rawDescGZIP() []byte {
	file_api_v1_synapse_proto_rawDescOnce.Do(func() {
		file_api_v1_synapse_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1_synapse_proto_rawDesc), len(file_api_v1_synapse_proto_rawDesc)))
	})
	return file_api_v1_synapse_proto_rawDescData
}

var file_api_v1_synapse_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_api_v1_synapse_proto_goTypes = []any{
	(*Kpak)(nil),            // 0: synapse.v1.Kpak
	(*IngestResponse)(nil),  // 1: synapse.v1.IngestResponse
	(*QueryRequest)(nil),    // 2: synapse.v1.QueryRequest
	(*HealthRequest)(nil),   // 3: synapse.v1.HealthRequest
	(*HealthResponse)(nil),  // 4: synapse.v1.HealthResponse
	(*PeersRequest)(nil),    // 5: synapse.v1.PeersRequest
	(*PeersResponse)(nil),   // 6: synapse.v1.PeersResponse
	(*PeerInfo)(nil),        // 7: synapse.v1.PeerInfo
	(*MetricsRequest)(nil),  // 8: synapse.v1.MetricsRequest
	(*MetricsResponse)(nil), // 9: synapse.v1.MetricsResponse
}
var file_api_v1_synapse_proto_depIdxs = []int32{
	7, // 0: synapse.v1.PeersResponse.peers:type_name -> synapse.v1.PeerInfo
	0, // 1: synapse.v1.SynapseService.Ingest:input_type -> synapse.v1.Kpak
	2, // 2: synapse.v1.SynapseService.Query:input_type -> synapse.v1.QueryRequest
	3, // 3: synapse.v1.SynapseService.Health:input_type -> synapse.v1.HealthRequest
	5, // 4: synapse.v1.SynapseService.GetPeers:input_type -> synapse.v1.PeersRequest
	8, // 5: synapse.v1.SynapseService.GetMetrics:input_type -> synapse.v1.MetricsRequest
	1, // 6: synapse.v1.SynapseService.Ingest:output_type -> synapse.v1.IngestResponse
	0, // 7: synapse.v1.SynapseService.Query:output_type -> synapse.v1.Kpak
	4, // 8: synapse.v1.SynapseService.Health:output_type -> synapse.v1.HealthResponse
	6, // 9: synapse.v1.SynapseService.GetPeers:output_type -> synapse.v1.PeersResponse
	9, // 10: synapse.v1.SynapseService.GetMetrics:output_type -> synapse.v1.MetricsResponse
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_api_v1_synapse_proto_init() }
func file_api_v1_synapse_proto_init() {
	if File_api_v1_synapse_proto != nil {
		return
	}
	file_api_v1_synapse_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_synapse_proto_rawDesc), len(file_api_v1_synapse_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_synapse_proto_goTypes,
		DependencyIndexes: file_api_v1_synapse_proto_depIdxs,
		MessageInfos:      file_api_v1_synapse_proto_msgTypes,
	}.Build()
	File_api_v1_synapse_proto = out.File
	file_api_v1_synapse_proto_goTypes = nil
	file_api_v1_synapse_proto_depIdxs = nil
}
